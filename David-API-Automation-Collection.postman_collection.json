{
	"info": {
		"_postman_id": "b15e6320-08be-48c1-b7c0-5e6fbebdbd86",
		"name": "API Automation Testing - David - North",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "Get All Todo List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "782e5c77-b7f0-4c79-89a1-3c7cd745130d",
								"exec": [
									"//Test to determine if URL is code and functioning properly\r",
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"//Determine minimum response time\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function(){\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function(){\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/todo",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"todo"
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo"
					},
					"response": []
				},
				{
					"name": "Get All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72fbe3a4-c782-401e-8fbd-f92bf0df50e9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"//Check if POST content comes out as expected\r",
									"pm.test(\"message matches \\\"Congratulations the installation of Fusio was successful\\\"\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Congratulations the installation of Fusio was successful\");\r",
									"});\r",
									"pm.test(\"status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"//Check if POST is sent as JSON\r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"//Check if POST matches 200|201|202\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"//Check if Post includes what was inputted\r",
									"pm.test(\"message = Congratulations the installation of Fusio was successful\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"\\message\\\": \\\"Congratulations the installation of Fusio was successful\\\"\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1040);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get entry by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32445751-3ffb-4ddd-bd12-afa2ad91825e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/todo/?todo_id=2",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"todo",
								""
							],
							"query": [
								{
									"key": "todo_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create new Entry",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d1c76eb-33e4-46c2-b593-fae9044c4c03",
								"exec": [
									"\r",
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"pm.test(\"Response time is less than 1700ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1700);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/todo",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"todo"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Delete a todo per ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8232d1cf-6b72-42ca-9414-5bc99baad0cb",
								"exec": [
									"pm.test(\"Response time is less than 1700ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1700);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/todo/?todo_id=2",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"todo",
								""
							],
							"query": [
								{
									"key": "todo_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d89243fc-697e-4be9-9fb5-b0d6a3136042",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d25c7653-93b4-4bcd-919d-575e4f729fe3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}